@{
    ViewData["Title"] = "Chi tiết chủ đề";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a href="/Admin/ChuDe">Danh sách chủ đề</a></li>
            <li class="breadcrumb-item active">Chi tiết chủ đề</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-xl-10 mx-auto">
            <div class="card shadow border-0 mb-4">
                <div class="card-header bg-gradient-primary-to-secondary text-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 d-flex align-items-center">
                            <i class="fas fa-info-circle fa-lg me-3"></i>
                            <span>Chi tiết chủ đề</span>
                        </h5>
                        <div>
                            <a id="editBtn" class="btn btn-light d-none">
                                <i class="fas fa-edit me-1"></i>Chỉnh sửa
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card-body p-4" id="detailContent">
                    <div class="text-center text-muted">Đang tải dữ liệu...</div>
                </div>

                <div class="d-flex justify-content-between border-top pt-4 mt-4 px-4 pb-4">
                    <a href="/ChuDe" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
                    </a>
                    <div id="actionButtons" class="d-none">
                        <a id="editLink" class="btn btn-primary me-2">
                            <i class="fas fa-edit me-1"></i>Chỉnh sửa
                        </a>
                        <a id="toggleLink" class="btn">
                            <i class="fas me-1"></i>
                            <span class="text-label"></span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function loadChuDeDetail() {
            const id = window.location.pathname.split('/').pop(); // Lấy id từ URL
            const response = await fetch(`/api/chude/get/${id}`);
            const container = document.getElementById("detailContent");
            const action = document.getElementById("actionButtons");
            const editBtn = document.getElementById("editBtn");

            if (!response.ok) {
                container.innerHTML = `<div class="text-danger text-center">Không tìm thấy chủ đề.</div>`;
                return;
            }

            const result = await response.json();
            const cd = result.data;

            document.getElementById("editBtn").classList.remove("d-none");
            document.getElementById("editBtn").href = `/ChuDe/Edit/${cd.id}`;
            document.getElementById("editLink").href = `/ChuDe/Edit/${cd.id}`;
            document.getElementById("toggleLink").onclick = () => toggleChuDe(cd.id, cd.isDeleted);

            container.innerHTML = `
                <div class="row g-4">
                    <div class="col-lg-12">
                        <div class="card h-100 shadow-sm border-0 bg-light">
                            <div class="card-body position-relative p-4">
                                <div class="position-absolute top-0 end-0 mt-3 me-3">
                                    <span class="badge ${cd.isDeleted ? 'bg-danger' : 'bg-success'} py-2 px-3">
                                        <i class="fas ${cd.isDeleted ? 'fa-ban' : 'fa-check-circle'} me-1"></i>
                                        ${cd.isDeleted ? 'Đã xóa' : 'Hoạt động'}
                                    </span>
                                </div>

                                <div class="text-center mb-4">
                                    ${cd.imageUrl
                                        ? `<img src="${cd.imageUrl}" alt="${cd.tenChuDe}" class="img-fluid rounded mb-3" style="max-height: 200px;">`
                                        : `<div class="bg-white d-flex align-items-center justify-content-center rounded mb-3" style="height: 200px;">
                                            <i class="fas fa-image fa-3x text-muted"></i>
                                        </div>`}
                                    <h3 class="card-title mb-0 fw-bold text-primary">${cd.tenChuDe}</h3>
                                    <p class="text-muted">Mã số: ${cd.id}</p>
                                </div>

                                <hr>

                                <div class="mt-3">
                                    <h6 class="fw-bold mb-2">Mô tả</h6>
                                    <div class="p-3 bg-white rounded border">
                                        ${cd.moTa ?? "<em class='text-muted'>Không có mô tả</em>"}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;

            const toggleBtn = document.getElementById("toggleLink");
            toggleBtn.className = `btn ${cd.isDeleted ? 'btn-success' : 'btn-danger'}`;
            toggleBtn.querySelector("i").className = `fas ${cd.isDeleted ? 'fa-undo-alt' : 'fa-ban'} me-1`;
            toggleBtn.querySelector(".text-label").innerText = cd.isDeleted ? 'Khôi phục' : 'Xóa';

            action.classList.remove("d-none");
        }

        document.addEventListener("DOMContentLoaded", loadChuDeDetail);
                async function toggleChuDe(id, isDeleted) {
            const confirmMsg = isDeleted ? "Bạn có chắc muốn khôi phục chủ đề này?" : "Bạn có chắc muốn khóa chủ đề này?";
            if (!confirm(confirmMsg)) return;

            try {
                const response = await fetch(`/api/ChuDe/toggle-active/${id}`, {
                    method: 'POST'
                });

                const result = await response.json();

                if (result.success) {
                    alert(result.message || "Cập nhật trạng thái thành công!");
                    await loadChuDeDetail(); // Tải lại thông tin chi tiết
                } else {
                    alert("Không thể cập nhật trạng thái.");
                }
            } catch (error) {
                console.error(error);
                alert("Lỗi khi gọi API ToggleActive.");
            }
        }

    </script>
}

<style>
    .bg-gradient-primary-to-secondary {
        background: linear-gradient(135deg, var(--bs-primary) 0%, #4a89dc 100%);
    }
</style>

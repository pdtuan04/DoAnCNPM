@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <h2>Sửa câu hỏi</h2>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <form id="cauHoiForm">
                <input type="hidden" id="cauHoiId" />

                <div class="mb-3">
                    <label for="noiDung" class="form-label">Nội dung <span class="text-danger">*</span></label>
                    <textarea class="form-control" id="noiDung" rows="4" required></textarea>
                </div>

                <div class="mb-3">
                    <label for="luaChonA" class="form-label">Lựa chọn A <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="luaChonA" required>
                </div>

                <div class="mb-3">
                    <label for="luaChonB" class="form-label">Lựa chọn B <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="luaChonB" required>
                </div>

                <div class="mb-3">
                    <label for="luaChonC" class="form-label">Lựa chọn C</label>
                    <input type="text" class="form-control" id="luaChonC">
                </div>

                <div class="mb-3">
                    <label for="luaChonD" class="form-label">Lựa chọn D</label>
                    <input type="text" class="form-control" id="luaChonD">
                </div>

                <div class="mb-3">
                    <label for="dapAnDung" class="form-label">Đáp án đúng <span class="text-danger">*</span></label>
                    <select class="form-select" id="dapAnDung" required>
                        <option value="">-- Chọn đáp án đúng --</option>
                        <option value="A">A</option>
                        <option value="B">B</option>
                        <option value="C">C</option>
                        <option value="D">D</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label for="giaiThich" class="form-label">Giải thích</label>
                    <textarea class="form-control" id="giaiThich" rows="3"></textarea>
                </div>

                <div class="mb-3">
                    <label for="diemLiet" class="form-label">Điểm liệt</label>
                    <input type="checkbox" id="diemLiet">
                </div>

                <div class="mb-3">
                    <label for="mediaFile" class="form-label">Hình ảnh</label>
                    <input type="file" class="form-control" id="mediaFile" accept="image/png,image/jpeg,image/jpg,image/gif">
                    <div class="form-text">Chọn file hình ảnh mới nếu muốn thay đổi (PNG, JPEG, JPG, GIF, tối đa 5MB)</div>
                    <input type="hidden" id="mediaUrl">
                    <div id="mediaUploadProgress" class="progress mt-2" style="display: none;">
                        <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                    </div>
                    <div id="mediaPreviewContainer" class="mt-2" style="display: none;">
                        <img id="imagePreview" style="max-width: 100%; max-height: 300px;" />
                    </div>
                    <p class="mt-1 text-muted" id="currentMediaText"></p>
                </div>

                <div class="mb-3">
                    <label for="loaiMedia" class="form-label">Loại media</label>
                    <select class="form-select" id="loaiMedia">
                        <option value="">-- Chọn loại media --</option>
                        <option value="image">Hình ảnh</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label for="meoGhiNho" class="form-label">Mẹo ghi nhớ</label>
                    <textarea class="form-control" id="meoGhiNho" rows="3"></textarea>
                </div>

                <div class="mb-3">
                    <label for="chuDeId" class="form-label">Chủ đề <span class="text-danger">*</span></label>
                    <select class="form-select" id="chuDeId" required></select>
                </div>

                <div class="mb-3">
                    <label for="loaiBangLaiId" class="form-label">Loại bằng lái <span class="text-danger">*</span></label>
                    <select class="form-select" id="loaiBangLaiId" required></select>
                </div>

                <div class="d-flex justify-content-between">
                    <a href="/Admin/QLCauHoi" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Quay lại
                    </a>
                    <button type="button" id="btnSave" class="btn btn-primary">
                        <i class="bi bi-save"></i> Lưu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="/admin/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/admin/assets/css/plugins.min.css" />
    <link rel="stylesheet" href="/admin/assets/css/kaiadmin.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" />

    <script src="/admin/assets/js/core/jquery-3.6.0.min.js"></script>
    <script src="/admin/assets/js/core/popper.min.js"></script>
    <script src="/admin/assets/js/core/bootstrap.min.js"></script>
    <script src="/admin/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <script src="/admin/assets/js/kaiadmin.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        #imagePreview {
            width: 100%;
            height: auto;
            max-height: 300px;
            object-fit: contain;
            border-radius: 8px;
        }
    </style>

    <script>
                $(document).ready(function () {
            // Initialize scrollbar if plugin is available
            if ($.fn.scrollbar) {
                $('.scrollbar-inner').scrollbar();
            } else {
                console.warn('jQuery Scrollbar plugin not loaded.');
            }

            // Get cauHoiId from URL
            function getCauHoiIdFromUrl() {
                const url = window.location.pathname;
                const parts = url.split('/');
                return parts[parts.length - 1];
            }

            const cauHoiId = getCauHoiIdFromUrl();
            $('#cauHoiId').val(cauHoiId);
            console.log('Loading question with ID:', cauHoiId); // Debug

            // Load question data and store it for dropdowns
            let questionData = null;
            loadCauHoiData().then((cauHoi) => {
                questionData = cauHoi;
                return Promise.all([loadLoaiBangLai(), loadChuDe()]);
            }).then(() => {
                // Set dropdown values after options are loaded
                if (questionData) {
                    $('#loaiBangLaiId').val(questionData.loaiBangLaiId || '');
                    $('#chuDeId').val(questionData.chuDeId || '');
                    console.log('Set dropdowns:', {
                        loaiBangLaiId: questionData.loaiBangLaiId,
                        chuDeId: questionData.chuDeId
                    });
                }
            }).catch((error) => {
                console.error('Error loading question data or dropdowns:', error);
            });

            $('#mediaFile').change(function () {
                const file = this.files[0];
                if (file) {
                    const fileType = file.type;
                    if (fileType.startsWith('image/')) {
                        const url = URL.createObjectURL(file);
                        $('#imagePreview').attr('src', url);
                        $('#mediaPreviewContainer').show();
                        $('#loaiMedia').val('image');
                        uploadImage(file);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Vui lòng chọn file hình ảnh (PNG, JPEG, JPG, GIF)'
                        });
                        $(this).val('');
                    }
                }
            });

            $('#btnSave').click(function () {
                updateCauHoi();
            });

            function uploadImage(file) {
                const formData = new FormData();
                formData.append('file', file);

                $('#mediaUploadProgress').show();

                const xhr = new XMLHttpRequest();
                xhr.upload.addEventListener('progress', function (e) {
                    if (e.lengthComputable) {
                        const percent = Math.round((e.loaded / e.total) * 100);
                        $('#mediaUploadProgress .progress-bar').css('width', percent + '%').text(percent + '%');
                    }
                });

                fetch('/api/Upload/upload-image', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + getToken()
                    },
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Upload thành công',
                            text: 'Hình ảnh đã được tải lên thành công',
                            timer: 1500,
                            showConfirmButton: false
                        });
                        $('#mediaUrl').val(data.filePath);
                        $('#currentMediaText').text('Hình ảnh mới: ' + data.filePath);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: data.message || 'Không thể upload hình ảnh'
                        });
                    }
                })
                .catch(() => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Đã xảy ra lỗi khi upload hình ảnh'
                    });
                })
                .finally(() => {
                    setTimeout(() => {
                        $('#mediaUploadProgress').hide();
                    }, 1000);
                });
            }

            function loadCauHoiData() {
                return new Promise((resolve, reject) => {
                    const id = $('#cauHoiId').val();
                    console.log('Fetching question with ID:', id); // Debug
                    fetch('/api/CauHoi/' + id, {
                        method: 'GET',
                        headers: {
                            'Authorization': 'Bearer ' + getToken()
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('API Response:', data); // Debug
                        if (data.status && data.data) {
                            const cauHoi = data.data;
                            $('#noiDung').val(cauHoi.noiDung || '');
                            $('#luaChonA').val(cauHoi.luaChonA || '');
                            $('#luaChonB').val(cauHoi.luaChonB || '');
                            $('#luaChonC').val(cauHoi.luaChonC || '');
                            $('#luaChonD').val(cauHoi.luaChonD || '');
                            $('#dapAnDung').val(cauHoi.dapAnDung || '');
                            $('#giaiThich').val(cauHoi.giaiThich || '');
                            $('#diemLiet').prop('checked', cauHoi.diemLiet || false);
                            $('#mediaUrl').val(cauHoi.mediaUrl || '');
                            $('#loaiMedia').val(cauHoi.loaiMedia || '');
                            $('#meoGhiNho').val(cauHoi.meoGhiNho || '');
                            $('#chuDeId').val(cauHoi.chuDeId || '');
                            $('#loaiBangLaiId').val(cauHoi.loaiBangLaiId || '');

                            if (cauHoi.mediaUrl && cauHoi.loaiMedia === 'image') {
                                $('#imagePreview').attr('src', cauHoi.mediaUrl);
                                $('#mediaPreviewContainer').show();
                                $('#currentMediaText').text('Hình ảnh hiện tại: ' + cauHoi.mediaUrl);
                            } else {
                                $('#mediaPreviewContainer').hide();
                                $('#currentMediaText').text('');
                            }
                            resolve(cauHoi);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: data.message || 'Không thể tải thông tin câu hỏi'
                            }).then(() => {
                                window.location.href = '/Admin/QLCauHoi';
                            });
                            reject(new Error('Không thể tải thông tin câu hỏi'));
                        }
                    })
                    .catch(error => {
                        console.error('API Error:', error); // Debug
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Đã xảy ra lỗi khi tải thông tin câu hỏi'
                        }).then(() => {
                            window.location.href = '/Admin/QLCauHoi';
                        });
                        reject(error);
                    });
                });
            }

            function loadLoaiBangLai() {
                return new Promise((resolve, reject) => {
                    fetch('/api/LoaiBangLai/get-loai-bang-lai-list', {
                        method: 'GET',
                        headers: {
                            'Authorization': 'Bearer ' + getToken()
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('LoaiBangLai Response:', data); // Debug
                        if (data.status && data.data) {
                            $('#loaiBangLaiId').empty().append('<option value="">-- Chọn loại bằng lái --</option>');
                            data.data.forEach(item => {
                                $('#loaiBangLaiId').append(`<option value="${item.id}">${item.tenLoai}</option>`);
                            });
                            resolve();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: 'Không thể tải danh sách loại bằng lái'
                            });
                            reject(new Error('Không thể tải danh sách loại bằng lái'));
                        }
                    })
                    .catch(error => {
                        console.error('LoaiBangLai Error:', error); // Debug
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Không thể tải danh sách loại bằng lái'
                        });
                        reject(error);
                    });
                });
            }

            function loadChuDe() {
                return new Promise((resolve, reject) => {
                    fetch('/api/ChuDe/danh-sach', {
                        method: 'GET',
                        headers: {
                            'Authorization': 'Bearer ' + getToken()
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('ChuDe Response:', data); // Debug
                        if (data && data.length > 0) {
                            $('#chuDeId').empty().append('<option value="">-- Chọn chủ đề --</option>');
                            data.forEach(item => {
                                $('#chuDeId').append(`<option value="${item.id}">${item.tenChuDe}</option>`);
                            });
                            resolve();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: 'Không thể tải danh sách chủ đề'
                            });
                            reject(new Error('Không thể tải danh sách chủ đề'));
                        }
                    })
                    .catch(error => {
                        console.error('ChuDe Error:', error); // Debug
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Không thể tải danh sách chủ đề'
                        });
                        reject(error);
                    });
                });
            }

            function updateCauHoi() {
                if (!validateForm()) return;

                const cauHoi = {
                    id: $('#cauHoiId').val(),
                    noiDung: $('#noiDung').val(),
                    luaChonA: $('#luaChonA').val(),
                    luaChonB: $('#luaChonB').val(),
                    luaChonC: $('#luaChonC').val() || null,
                    luaChonD: $('#luaChonD').val() || null,
                    dapAnDung: $('#dapAnDung').val(),
                    giaiThich: $('#giaiThich').val() || null,
                    diemLiet: $('#diemLiet').is(':checked'),
                    mediaUrl: $('#mediaUrl').val() || null,
                    loaiMedia: $('#loaiMedia').val() || null,
                    meoGhiNho: $('#meoGhiNho').val() || null,
                    chuDeId: $('#chuDeId').val(),
                    loaiBangLaiId: $('#loaiBangLaiId').val()
                };

                console.log('Updating CauHoi:', cauHoi); // Debug

                fetch('/api/CauHoi/update', {
                    method: 'PUT',
                    headers: {
                        'Authorization': 'Bearer ' + getToken(),
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(cauHoi)
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Update Response:', data); // Debug
                    if (data.status) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công',
                            text: 'Cập nhật câu hỏi thành công',
                            confirmButtonText: 'OK'
                        }).then(result => {
                            if (result.isConfirmed) {
                                window.location.href = '/Admin/QLCauHoi';
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: data.message || 'Không thể cập nhật câu hỏi'
                        });
                    }
                })
                .catch(error => {
                    console.error('Update Error:', error); // Debug
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Đã xảy ra lỗi khi cập nhật câu hỏi'
                    });
                });
            }

            function validateForm() {
                if (!$('#noiDung').val()) {
                    Swal.fire({ icon: 'error', title: 'Lỗi', text: 'Vui lòng nhập nội dung câu hỏi' });
                    return false;
                }
                if (!$('#luaChonA').val()) {
                    Swal.fire({ icon: 'error', title: 'Lỗi', text: 'Vui lòng nhập lựa chọn A' });
                    return false;
                }
                if (!$('#luaChonB').val()) {
                    Swal.fire({ icon: 'error', title: 'Lỗi', text: 'Vui lòng nhập lựa chọn B' });
                    return false;
                }
                if (!$('#dapAnDung').val()) {
                    Swal.fire({ icon: 'error', title: 'Lỗi', text: 'Vui lòng chọn đáp án đúng' });
                    return false;
                }
                if (!$('#chuDeId').val()) {
                    Swal.fire({ icon: 'error', title: 'Lỗi', text: 'Vui lòng chọn chủ đề' });
                    return false;
                }
                if (!$('#loaiBangLaiId').val()) {
                    Swal.fire({ icon: 'error', title: 'Lỗi', text: 'Vui lòng chọn loại bằng lái' });
                    return false;
                }
                return true;
            }

            function getToken() {
                return localStorage.getItem('jwtToken') || '';
            }
        });
    </script>
}
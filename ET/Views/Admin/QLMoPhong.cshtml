@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <h2>Danh sách câu mô phỏng</h2>
        </div>
        <div class="col text-end">
            <a href="/Admin/CreateMoPhong" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Thêm mô phỏng mới
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <table id="moPhongTable" class="display table table-striped table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th>Nội dung</th>
                        <th>Video Url</th>
                        <th style="width: 200px;">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        $('#moPhongTable').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: true,
            ajax: function (data, callback, settings) {
                var page = (data.start / data.length) + 1;
                $.ajax({
                    url: '/api/mophong/paged-mo-phongs',
                    data: {
                        page: page,
                        pageSize: data.length,
                        search: data.search.value,
                        sortCol: data.columns[data.order[0].column].data,
                        sortDir: data.order[0].dir
                    },
                    success: function (res) {
                        callback({
                            recordsTotal: res.recordsTotal,
                            recordsFiltered: res.recordsFiltered,
                            data: res.data
                        });
                    }
                });
            },
            columns: [
                {
                    data: 'noiDung',
                    render: function(data, type, row) {
                        return type === 'display' && data.length > 100 ?
                            data.substr(0, 100) + '...' : data;
                    }
                },
                {
                    data: 'videoUrl',
                    render: function(data, type, row) {
                        return data ? data : '<em>Không có video</em>';
                    }
                },
                {
                    data: 'id',
                    orderable: false,
                    render: function (data, type, row) {
                        return `
                            <div class="btn-group" role="group">
                                <a href="/Admin/DetailsMoPhong/${data}" class="btn btn-sm btn-info">
                                    <i class="bi bi-eye"></i> Chi tiết
                                </a>
                                <a href="/Admin/EditMoPhong/${data}" class="btn btn-sm btn-primary">
                                    <i class="bi bi-pencil"></i> Sửa
                                </a>
                                <button onclick="deleteMoPhong('${data}')" class="btn btn-sm btn-danger">
                                    <i class="bi bi-trash"></i> Xóa
                                </button>
                            </div>
                        `;
                    }
                }
            ],
            language: {
                url: '//cdn.datatables.net/plug-ins/1.10.24/i18n/Vietnamese.json'
            }
        });
    });

    // Hàm xóa mô phỏng với xác nhận
    function deleteMoPhong(id) {
        Swal.fire({
            title: 'Bạn có chắc chắn?',
            text: "Bạn sẽ không thể khôi phục lại dữ liệu này!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Xóa',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/api/mophong/delete/${id}`,
                    type: 'DELETE',
                    headers: {
                        'Authorization': 'Bearer ' + getToken()
                    },
                    success: function (response) {
                        if (response.status) {
                            Swal.fire(
                                'Đã xóa!',
                                'Mô phỏng đã được xóa thành công.',
                                'success'
                            );
                            $('#moPhongTable').DataTable().ajax.reload();
                        } else {
                            Swal.fire(
                                'Lỗi!',
                                response.message || 'Không thể xóa mô phỏng.',
                                'error'
                            );
                        }
                    },
                    error: function (xhr) {
                        Swal.fire(
                            'Lỗi!',
                            'Đã xảy ra lỗi khi xóa mô phỏng.',
                            'error'
                        );
                    }
                });
            }
        });
    }

    // Lấy JWT token từ localStorage hoặc nơi lưu trữ khác
    function getToken() {
        return localStorage.getItem('jwtToken') || '';
    }
</script>
}